<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension-point id="dropRestriction" name="Requirement Drop Restriction in target Models" schema="schema/dropRestriction.exsd"/>
   <extension-point id="specificDropAction" name="Define creation of specific actions on requirement drop" schema="schema/specificDropAction.exsd"/>
   <extension-point id="modelAttachmentPolicy" name="enable to attach a topcased model to a requirement model" schema="schema/modelAttachmentPolicy.exsd"/>
   <extension-point id="requirementIdentifierVariables" name="Provide ways to add Variables to the requirement naming pattern" schema="schema/requirementIdentifierVariables.exsd"/>
   <extension-point id="requirementTransformation" name="Extension point to implement transformation from file to requirement" schema="schema/requirementTransformation.exsd"/>
   <extension-point id="requirementCountingAlgorithm" name="Extension point to implement the counting algorithm of requirements" schema="schema/requirementCountingAlgorithm.exsd"/>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="org.topcased.modeler.editor.Modeler"
            class="org.topcased.requirement.core.views.RequirementAdapterFactory">
         <adapter
               type="org.topcased.requirement.core.views.upstream.IUpstreamRequirementPage">
         </adapter>
         <adapter
               type="org.topcased.requirement.core.views.current.ICurrentRequirementPage">
         </adapter>
      </factory>
   </extension>
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.topcased.requirement.core.preferences.RequirementPreferenceInitializer">
      </initializer>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.topcased.requirement.core.handlers.CreateCurrentRequirementHandler"
            commandId="org.topcased.requirement.core.createCurrentRequirement">
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.CreateAnonymousRequirementHandler"
            commandId="org.topcased.requirement.core.createAnonymousRequirement">
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.LinkRequirementModelHandler"
            commandId="org.topcased.requirement.core.linkRequirement">
         <activeWhen>
            <with
                  variable="activeEditor">
               <instanceof
                     value="org.topcased.modeler.editor.Modeler">
               </instanceof>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.LinkWithEditorHandler"
            commandId="org.topcased.requirement.core.linkWithEditor">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.MoveUpHandler"
            commandId="org.topcased.requirement.core.moveUp">
         <activeWhen>
            <with
                  variable="selection">
               <iterate>
                  <or>
                     <instanceof
                           value="org.topcased.requirement.Requirement">
                     </instanceof>
                     <instanceof
                           value="org.topcased.requirement.HierarchicalElement">
                     </instanceof>
                  </or></iterate>
               <count
                     value="+">
               </count>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.MoveDownHandler"
            commandId="org.topcased.requirement.core.moveDown">
         <activeWhen>
            <with
                  variable="selection">
               <iterate>
                  <or>
                     <instanceof
                           value="org.topcased.requirement.Requirement">
                     </instanceof>
                     <instanceof
                           value="org.topcased.requirement.HierarchicalElement">
                     </instanceof>
                  </or>
               </iterate>
               <count
                     value="+">
               </count>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.UpdateRequirementModelHandler"
            commandId="org.topcased.requirement.core.updateRequirementModel">
         <activeWhen>
            <and>
               <with
                     variable="requirementActionsEnablement.hasRequirementModel">
                  <equals
                        value="true">
                  </equals>
               </with>
               <with
                     variable="requirementActionsEnablement.isImpacted">
                  <equals
                        value="true">
                  </equals>
               </with>
            </and>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.UnlinkRequirementModelHandler"
            commandId="org.topcased.requirement.core.unlinkRequirementModel">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.FlatHandler"
            commandId="org.topcased.requirement.core.flat">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.HierarchicalHandler"
            commandId="org.topcased.requirement.core.hierarchical">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.SortHandler"
            commandId="org.topcased.requirement.core.sort">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
      <handler
            class="org.topcased.requirement.core.handlers.LinkToUpstreamHandler"
            commandId="org.topcased.requirement.core.linkToUpstream">
         <activeWhen>
            <with
                  variable="requirementActionsEnablement.hasRequirementModel">
               <equals
                     value="true">
               </equals>
            </with>
         </activeWhen>
      </handler>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.eclipse.ui.popup.any?after=additions">
         <command
               commandId="org.topcased.requirement.core.createCurrentRequirement"
               icon="icons/current.gif"
               label="Create Current Requirement"
               style="push">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="activeMenuSelection">
                  <iterate
                        ifEmpty="false">
                     <instanceof
                           value="org.topcased.modeler.edit.IModelElementEditPart">
                     </instanceof>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
         <command
               commandId="org.topcased.requirement.core.createAnonymousRequirement"
               icon="icons/anonymous.gif"
               label="Create Free Text"
               style="push">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="activeMenuSelection">
                  <iterate
                        ifEmpty="false">
                     <instanceof
                           value="org.topcased.modeler.edit.IModelElementEditPart">
                     </instanceof>
                  </iterate>
               </with>
            </visibleWhen>
         </command>
      </menuContribution>
      <menuContribution
            locationURI="toolbar:org.eclipse.ui.main.toolbar?after=additions">
         <toolbar
               id="org.topcased.requirement.core.mainToolbar">
            <command
                  commandId="org.topcased.requirement.core.linkRequirement"
                  label="&amp;Attach Requirements"
                  style="push">
               <visibleWhen
                     checkEnabled="false">
                  <with
                        variable="activeWorkbenchWindow.activePerspective">
                     <equals
                           value="org.topcased.requirement.core.perspective">
                     </equals>
                  </with>
               </visibleWhen>
            </command>
         </toolbar>
      </menuContribution>
            <menuContribution
                  locationURI="toolbar:org.topcased.requirement.core.currentView">
               <command
                     commandId="org.topcased.requirement.core.linkToUpstream"
                     label="&amp;Link To Upstream Requirement"
                     style="toggle">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <command
                     commandId="org.topcased.requirement.core.linkWithEditor"
                     label="&amp;Link With Editor"
                     style="toggle">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <separator
                     name="org.topcased.requirement.core.separatorMiddle"
                     visible="true">
               </separator>
               <command
                     commandId="org.topcased.requirement.core.moveUp"
                     label="&amp;Move Up"
                     style="push">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <command
                     commandId="org.topcased.requirement.core.moveDown"
                     label="&amp;Move Down"
                     style="push">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
            </menuContribution>
            <menuContribution
                  locationURI="toolbar:org.topcased.requirement.core.upstreamView">
               <command
                     commandId="org.topcased.requirement.core.updateRequirementModel"
                     label="&amp;Update Requirement Model"
                     style="push">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <command
                     commandId="org.topcased.requirement.core.unlinkRequirementModel"
                     label="&amp;Unlink Requirement Model"
                     style="push">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <separator
                     name="separatorLeft"
                     visible="true">
               </separator>
               <command
                     commandId="org.topcased.requirement.core.hierarchical"
                     label="&amp;Hierarchical"
                     style="toggle">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <command
                     commandId="org.topcased.requirement.core.flat"
                     label="&amp;Flat"
                     style="toggle">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
               <separator
                     name="separatorRight"
                     visible="true">
               </separator>
               <command
                     commandId="org.topcased.requirement.core.sort"
                     label="&amp;Sort"
                     style="toggle">
                  <visibleWhen
                        checkEnabled="false">
                     <with
                           variable="requirementActionsEnablement.hasRequirementModel">
                        <equals
                              value="true">
                        </equals>
                     </with>
                  </visibleWhen>
               </command>
            </menuContribution>
     </extension>
   <extension
         point="org.eclipse.ui.services">
      <sourceProvider
            provider="org.topcased.requirement.core.services.RequirementModelSourceProvider">
         <variable
               name="requirementActionsEnablement.hasRequirementModel"
               priorityLevel="workbench">
         </variable>
         <variable
               name="requirementActionsEnablement.isImpacted"
               priorityLevel="workbench">
         </variable>
      </sourceProvider>
   </extension>
   <extension
         point="org.eclipse.ui.commandImages">
      <image
            commandId="org.topcased.requirement.core.moveUp"
            icon="icons/up.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.moveDown"
            icon="icons/down.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.linkWithEditor"
            icon="icons/synced.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.linkRequirement"
            icon="icons/current.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.updateRequirementModel"
            icon="icons/import.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.unlinkRequirementModel"
            icon="icons/unlink.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.flat"
            icon="icons/flat-mode.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.hierarchical"
            icon="icons/tree-mode.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.sort"
            icon="icons/alphabetic_sorter.gif">
      </image>
      <image
            commandId="org.topcased.requirement.core.linkToUpstream"
            icon="icons/checkout_action-1.gif">
      </image>
   </extension>
   <extension
         point="org.eclipse.ui.perspectives">
      <perspective
            class="org.topcased.requirement.core.internal.TopcasedRequirementPerspectiveFactory"
            icon="icons/ModelingPerspective.gif"
            id="org.topcased.requirement.core.perspective"
            name="Topcased Requirement">
      </perspective>
   </extension>
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.topcased.facilities.preferences.TopcasedPreferencePage"
            class="org.topcased.requirement.core.preferences.RequirementPreferencePage"
            id="org.topcased.requirement.preferences"
            name="Requirement">
      </page>
      <page
            category="org.topcased.requirement.preferences"
            class="org.topcased.requirement.core.preferences.UpstreamPreferencePage"
            id="org.topcased.requirement.preferences.upstream"
            name="Upstream Settings">
      </page>
      <page
            category="org.topcased.requirement.preferences"
            class="org.topcased.requirement.core.preferences.CurrentPreferencePage"
            id="org.topcased.requirement.preferences.current"
            name="Current Settings">
      </page>
      <page
            category="org.topcased.requirement.preferences"
            class="org.topcased.requirement.core.preferences.RequirementNamingPreferencePage"
            id="org.topcased.requirement.preferences.naming"
            name="Requirement Naming Format">
      </page>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <command
            categoryId="org.eclipse.ui.category.edit"
            description="Cut a model object with its children"
            id="org.topcased.requirement.core.cutModelObject"
            name="Cut">
      </command>
      <command
            categoryId="org.eclipse.ui.category.edit"
            description="Copy a model object with its children"
            id="org.topcased.requirement.core.copyModelObject"
            name="Copy">
      </command>
      <command
            categoryId="org.eclipse.ui.category.edit"
            description="Paste a model object with its children"
            id="org.topcased.requirement.core.pasteModelObject"
            name="Paste">
      </command>
      <command
            categoryId="org.eclipse.ui.category.edit"
            description="Undo an operation executed from the stack"
            id="org.topcased.requirement.core.undo"
            name="Undo">
      </command>
      <command
            categoryId="org.eclipse.ui.category.edit"
            description="Redo an operation executed from the stack"
            id="org.topcased.requirement.core.redo"
            name="Redo">
      </command>
            <command
            description="Create an anonymous requirement (free text)"
            id="org.topcased.requirement.core.createAnonymousRequirement"
            name="Create Anonymous Requirement">
      </command>
      <command
            description="Create a current requirement"
            id="org.topcased.requirement.core.createCurrentRequirement"
            name="Create Current Requirement">
      </command>
      <command
            description="Link a requirement model to your DSL model"
            id="org.topcased.requirement.core.linkRequirement"
            name="Link Requirement Model">
      </command>
      <command
            description="Link current page focus with editor selection"
            id="org.topcased.requirement.core.linkWithEditor"
            name="Link With Editor">
         <state
               class="org.eclipse.ui.handlers.RegistryToggleState"
               id="org.eclipse.ui.commands.toggleState">
         </state>
      </command>
      <command
            description="Move up one or several requirements or hierachical elements"
            id="org.topcased.requirement.core.moveUp"
            name="Move Up">
      </command>
      <command
            description="Move down one or several requirements or hierachical elements"
            id="org.topcased.requirement.core.moveDown"
            name="Move Down">
      </command>
      <command
            description="Update your requirement model with an upper version"
            id="org.topcased.requirement.core.updateRequirementModel"
            name="Update Requirement Model">
      </command>
      <command
            description="Unlink (and delete) your requirement model"
            id="org.topcased.requirement.core.unlinkRequirementModel"
            name="Unlink Requirement Model">
      </command>
      <command
            description="Flat representation of the upstream requirements"
            id="org.topcased.requirement.core.flat"
            name="Flat">
         <state
               class="org.eclipse.ui.handlers.RegistryToggleState"
               id="org.eclipse.ui.commands.toggleState">
         </state>
      </command>
      <command
            description="Hierarchical representation of the upstream requirements"
            id="org.topcased.requirement.core.hierarchical"
            name="Hierarchical">
         <state
               class="org.eclipse.ui.handlers.RegistryToggleState"
               id="org.eclipse.ui.commands.toggleState">
         </state>
      </command>
      <command
            description="Sort alphabetically the different elements"
            id="org.topcased.requirement.core.sort"
            name="Sort">
         <state
               class="org.eclipse.ui.handlers.RegistryToggleState"
               id="org.eclipse.ui.commands.toggleState">
         </state>
      </command>
      <command
            description="Link a current requirement focus to his upstream requirement reference"
            id="org.topcased.requirement.core.linkToUpstream"
            name="Link To Upstream Requirement">
         <state
               class="org.eclipse.ui.handlers.RegistryToggleState"
               id="org.eclipse.ui.commands.toggleState">
         </state>
      </command>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            adaptable="true"
            class="org.topcased.requirement.core.decorators.UpstreamRequirementDecorator"
            id="org.topcased.requirement.core.decorators.upstream"
            label="Upstream Requirement Decorator"
            lightweight="true"
            state="true">
         <enablement>
            <objectClass
                  name="ttm.Requirement">
            </objectClass>
         </enablement>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.propertyPages">
      <page
            category="org.topcased.facilities.preferences.property.TopcasedPreferencePage"
            class="org.topcased.requirement.core.preferences.RequirementNamingPreferencePage"
            id="org.topcased.requirement.preferences.property.naming"
            name="Requirement Naming Format">
         <enabledWhen>
            <adapt
                  type="org.eclipse.core.resources.IProject">
            </adapt>
         </enabledWhen>
      </page>
   </extension>

   <extension
         point="org.eclipse.ui.views">
      <view
            name="Upstream Requirement"
            icon="icons/current.gif"
            category="org.topcased.facilities.views"
            class="org.topcased.requirement.core.views.upstream.UpstreamRequirementView"
            id="org.topcased.requirement.core.upstreamView">
      </view>
      <view
            category="org.topcased.facilities.views"
            class="org.topcased.requirement.core.views.current.CurrentRequirementView"
            icon="icons/current.gif"
            id="org.topcased.requirement.core.currentView"
            name="Current Requirement">
      </view>
   </extension>
   <!-- TODO : see why there is a conflict with global binding -->
   <!--extension
         point="org.eclipse.ui.bindings">
      <key
            commandId="org.topcased.requirement.core.cutModelObject"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
            sequence="M1+X">
      </key>
      <key
            commandId="org.topcased.requirement.core.copyModelObject"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
            sequence="M1+C">
      </key>
      <key
            commandId="org.topcased.requirement.core.pasteModelObject"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
            sequence="M1+V">
      </key>
      <key
            commandId="org.topcased.requirement.core.undo"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
            sequence="M1+Z">
      </key>
      <key
            commandId="org.topcased.requirement.core.redo"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
            sequence="M1+Y">
      </key>
   </extension-->
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyContributor">
      <propertyContributor
            contributorId="org.topcased.modeler.editor.Modeler"
            labelProvider="org.topcased.modeler.editor.properties.ModelerLabelProvider"
            typeMapper="org.topcased.modeler.editor.properties.ModelerTypeMapper">
         <propertyCategory
               category="requirement"></propertyCategory>
      </propertyContributor>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyTabs">
      <propertyTabs
            contributorId="org.topcased.modeler.editor.Modeler">
         <propertyTab
               afterTab="org.topcased.requirement.core.advancedTab"
               category="requirement"
               id="org.topcased.requirement.core.requirementTab"
               label="Requirement">
         </propertyTab>
      </propertyTabs>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertySections">
      <propertySections
            contributorId="org.topcased.modeler.editor.Modeler">
         <propertySection
               class="org.topcased.requirement.core.properties.sections.RequirementPropertySection"
               id="org.topcased.requirement.core.properties.sections.RequirementSection"
               tab="org.topcased.requirement.core.requirementTab">
            <input
                  type="org.eclipse.emf.ecore.EObject">
            </input>
         </propertySection>
      </propertySections>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyContributor">
      <propertyContributor
            contributorId="org.topcased.requirement.core.contributor"
            labelProvider="org.topcased.requirement.core.providers.RequirementModelerLabelProvider"
            typeMapper="org.topcased.modeler.editor.properties.ModelerTypeMapper">
         <propertyCategory
               category="model">
         </propertyCategory>
         <propertyCategory
               category="advanced">
         </propertyCategory>
      </propertyContributor>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertyTabs">
      <propertyTabs
            contributorId="org.topcased.requirement.core.contributor">
         <propertyTab
               category="model"
               id="org.topcased.requirement.core.modelTab"
               label="Model">
         </propertyTab>
         <propertyTab
               category="advanced"
               id="org.topcased.requirement.core.advancedTab"
               label="Advanced">
         </propertyTab>
      </propertyTabs>
   </extension>
   <extension
         point="org.eclipse.ui.views.properties.tabbed.propertySections">
      <propertySections
            contributorId="org.topcased.requirement.core.contributor">
         <propertySection
               class="org.topcased.requirement.core.properties.sections.IdentifiedElementIdentifierPropertySection"
               id="org.topcased.requirement.core.properties.sections.IdentifiedElementIdentifierPropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.IdentifiedElement">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.IdentifiedElementIdentifierPropertySection"
               class="org.topcased.requirement.core.properties.sections.IdentifiedIElementDescriptionPropertySection"
               id="org.topcased.requirement.core.properties.sections.IdentifiedIElementDescriptionPropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.IdentifiedElement">
            </input>
         </propertySection>
         <propertySection
               class="org.topcased.requirement.core.properties.sections.AttributeNamePropertySection"
               id="org.topcased.requirement.core.properties.sections.AttributeNamePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.Attribute">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.AttributeNamePropertySection"
               class="org.topcased.requirement.core.properties.sections.ObjectAttributeValuePropertySection"
               id="org.topcased.requirement.core.properties.sections.ObjectAttributeValuePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.ObjectAttribute">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.ObjectAttributeValuePropertySection"
               class="org.topcased.requirement.core.properties.sections.AttributeLinkPartialPropertySection"
               id="org.topcased.requirement.core.properties.sections.AttributeLinkPartialPropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.AttributeLink">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.AttributeNamePropertySection"
               class="org.topcased.requirement.core.properties.sections.TextAttributeSingleValuePropertySection"
               filter="org.topcased.requirement.core.properties.filters.TextAttributeSingleValueFilter"
               id="org.topcased.requirement.core.properties.sections.TextAttributeSingleValuePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.TextAttribute">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.AttributeNamePropertySection"
               class="org.topcased.requirement.core.properties.sections.TextAttributeMultiValuePropertySection"
               filter="org.topcased.requirement.core.properties.filters.TextAttributeMultiValueFilter"
               id="org.topcased.requirement.core.properties.sections.TextAttributeMultiValuePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.TextAttribute">
            </input>
         </propertySection>
         <propertySection
               class="org.topcased.requirement.core.properties.sections.ConfiguratedAttributeNamePropertySection"
               id="org.topcased.requirement.core.properties.sections.ConfiguratedAttributeNamePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.ConfiguratedAttribute">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.ConfiguratedAttributeNamePropertySection"
               class="org.topcased.requirement.core.properties.sections.ConfiguratedAttributeTypePropertySection"
               id="org.topcased.requirement.core.properties.sections.ConfiguratedAttributeTypePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.ConfiguratedAttribute">
            </input>
         </propertySection>
         <propertySection
               class="org.topcased.requirement.core.properties.sections.AttributeValueNamePropertySection"
               id="org.topcased.requirement.core.properties.sections.AttributeValueNamePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.AttributeValue">
            </input>
         </propertySection>
         <propertySection
               afterSection="org.topcased.requirement.core.properties.sections.AttributeValueNamePropertySection"
               class="org.topcased.requirement.core.properties.sections.DefaultAttributeValuePropertySection"
               id="org.topcased.requirement.core.properties.sections.DefaultAttributeValuePropertySection"
               tab="org.topcased.requirement.core.modelTab">
            <input
                  type="org.topcased.requirement.AttributeValue">
            </input>
         </propertySection>
         <propertySection
               class="org.topcased.tabbedproperties.sections.AdvancedPropertySection"
               id="org.topcased.requirement.core.AdvancedSection"
               tab="org.topcased.requirement.core.advancedTab">
            <input
                  type="org.topcased.requirement.IdentifiedElement">
            </input>
            <input
                  type="org.topcased.requirement.Attribute">
            </input>
            <input
                  type="org.topcased.requirement.ConfiguratedAttribute">
            </input>
            <input
                  type="org.topcased.requirement.AttributeValue">
            </input>
         </propertySection>
      </propertySections>         
   </extension>
   <extension
         point="org.topcased.modeler.duplicationAdapter">
      <adapter
            class="org.topcased.requirement.core.listeners.RequirementDuplicationAdapter"
            metamodel="http://www.topcased.org/SAM/1.2">
      </adapter>
   </extension>
   <extension
         point="org.topcased.modeler.commandsStackListeners">
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.DeleteCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.CutCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.PasteCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.CopyCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.RenameCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.DragAndDropCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.SetNameCommandResolver">
      </command>
      <command
            commandStackListener="org.topcased.requirement.core.resolvers.CreateCurrentReqCommandResolver">
      </command>
   </extension>
   <extension
         point="org.topcased.requirement.core.requirementCountingAlgorithm">
      <algorithm
            class="org.topcased.requirement.core.extensions.DefaultRequirementCountingAlgorithm"
            description="Provide a default algorithm for requirement counting : The index is stored on the root hierarchical element of the requirement model and is incremented when a current requirement is created"
            name="Default Algorithm">
      </algorithm>
      <algorithm
            class="org.topcased.requirement.core.extensions.RegexRequirementCountingAlgorithm"
            description="This algorithm is based on regular expressions. The index for a new current requirement is the (maximum number + step) of all the already created current requirements. With this algorithm, we recommend to use a naming pattern similar to E_{resource name}_{index}. "
            name="Regex Algorithm">
      </algorithm>
   </extension>
   <extension
         point="org.topcased.requirement.core.requirementIdentifierVariables">
      <variables
            class="org.topcased.requirement.core.extensions.DefaultRequirementIdentifierVariables"
            id="Default Variables">
      </variables>
   </extension>
</plugin>
